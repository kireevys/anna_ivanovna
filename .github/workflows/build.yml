name: Build Binaries

on:
  push:
    branches:
      - build-binaries

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive_name: anna_ivanovna-x86_64-unknown-linux-gnu.tar.gz
            binary_name: anna_ivanovna

          - os: macos-latest
            target: x86_64-apple-darwin
            archive_name: anna_ivanovna-x86_64-apple-darwin.tar.gz
            binary_name: anna_ivanovna

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive_name: anna_ivanovna-x86_64-pc-windows-msvc.zip
            binary_name: anna_ivanovna.exe

          - os: macos-latest
            target: aarch64-apple-darwin
            archive_name: anna_ivanovna-aarch64-apple-darwin.tar.gz
            binary_name: anna_ivanovna

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4

      - name: Установка Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Сборка
        run: cargo build --release --target ${{ matrix.target }}

      - name: Создание архива
        run: |
          mkdir -p dist
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            # Windows - создаем ZIP архив
            cd target/${{ matrix.target }}/release
            zip -r ../../../dist/${{ matrix.archive_name }} ${{ matrix.binary_name }}
            cd ../../../
          else
            # macOS/Linux - создаем tar.gz архив
            cd target/${{ matrix.target }}/release
            tar -czf ../../../dist/${{ matrix.archive_name }} ${{ matrix.binary_name }}
            cd ../../../
          fi
        shell: bash

      - name: Загрузка артефактов
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive_name }}
          path: dist/${{ matrix.archive_name }}
          retention-days: 30
