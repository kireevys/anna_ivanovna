name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Run Tests
        run: cargo test
      - name: clippy
        run: cargo clippy --all-targets --all-features -- -W clippy::style -W clippy::pedantic -D clippy::perf -D warnings

  build:
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
        target: [ x86_64-pc-windows-msvc, x86_64-apple-darwin ]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4

      - name: Установка Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Установка MSVC (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64"
          echo "C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Tools\MSVC\*\bin\Hostx64\x64" >> $GITHUB_PATH


      - name: Сборка
        run: cargo build --release --target ${{ matrix.target }}

      - name: Архивация бинарника
        run: |
          mkdir dist
          cp -r target/${{ matrix.target }}/release/* dist/
        shell: bash

      - name: Загрузка артефактов
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target }}
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Скачать артефакты
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Создать GitHub релиз
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
